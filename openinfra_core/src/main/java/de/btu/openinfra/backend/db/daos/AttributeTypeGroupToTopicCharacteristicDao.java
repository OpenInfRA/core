package de.btu.openinfra.backend.db.daos;

import java.util.Locale;
import java.util.UUID;

import de.btu.openinfra.backend.db.MappingResult;
import de.btu.openinfra.backend.db.OpenInfraSchemas;
import de.btu.openinfra.backend.db.jpa.model.AttributeTypeGroup;
import de.btu.openinfra.backend.db.jpa.model.AttributeTypeGroupToTopicCharacteristic;
import de.btu.openinfra.backend.db.jpa.model.TopicCharacteristic;
import de.btu.openinfra.backend.db.pojos.AttributeTypeGroupToTopicCharacteristicPojo;

/**
 * This class represents the AttributeTypeGroupToTopicCharacteristic and is used
 * to access the underlying layer generated by JPA.
 *
 * @author <a href="http://www.b-tu.de">BTU</a> DBIS
 *
 */
public class AttributeTypeGroupToTopicCharacteristicDao extends
	OpenInfraValueValueDao<AttributeTypeGroupToTopicCharacteristicPojo,
	AttributeTypeGroupToTopicCharacteristic, TopicCharacteristic,
	AttributeTypeGroup> {

	/**
	 * This is the required constructor which calls the super constructor and in
	 * turn creates the corresponding entity manager.
	 *
	 * @param currentProjectId the current project id (this should be null when
	 *                         the system schema is selected)
	 * @param schema           the required schema
	 */
	public AttributeTypeGroupToTopicCharacteristicDao(
			UUID currentProjectId,
			OpenInfraSchemas schema) {
		super(currentProjectId,
		      schema,
			  AttributeTypeGroupToTopicCharacteristic.class,
			  TopicCharacteristic.class, AttributeTypeGroup.class);
	}

	@Override
	public AttributeTypeGroupToTopicCharacteristicPojo mapToPojo(
			Locale locale,
			AttributeTypeGroupToTopicCharacteristic atgttc) {
	    if (atgttc != null) {
    		AttributeTypeGroupToTopicCharacteristicPojo pojo =
    				new AttributeTypeGroupToTopicCharacteristicPojo(atgttc);

    		pojo.setAttributeTypeGroup(new AttributeTypeGroupDao(
    		        currentProjectId,
    		        schema).mapToPojo(
    		                locale,
    		                atgttc.getAttributeTypeGroup()));
    		pojo.setMultiplicity(new MultiplicityDao(
    		        currentProjectId,
    		        schema).mapToPojo(
    		                locale,
    		                atgttc.getMultiplicityBean()));
    		pojo.setTopicCharacteristicId(
    		        atgttc.getTopicCharacteristic().getId());

    		if(atgttc.getOrder() != null) {
    			pojo.setOrder(atgttc.getOrder());
    		}

    		return pojo;
	    } else {
	        return null;
	    }
	}

	@Override
	public MappingResult<AttributeTypeGroupToTopicCharacteristic> mapToModel(
			AttributeTypeGroupToTopicCharacteristicPojo pojo,
			AttributeTypeGroupToTopicCharacteristic atg) {

        // TODO set the model values

        // return the model as mapping result
        return new MappingResult<AttributeTypeGroupToTopicCharacteristic>(
                atg.getId(), atg);
	}

}
