package de.btu.openinfra.backend.db.daos.meta;

import java.util.Locale;
import java.util.UUID;

import de.btu.openinfra.backend.db.MappingResult;
import de.btu.openinfra.backend.db.OpenInfraSchemas;
import de.btu.openinfra.backend.db.daos.OpenInfraDao;
import de.btu.openinfra.backend.db.jpa.model.meta.Ports;
import de.btu.openinfra.backend.db.pojos.meta.PortsPojo;
import de.btu.openinfra.backend.exception.OpenInfraEntityException;
import de.btu.openinfra.backend.exception.OpenInfraExceptionTypes;

/**
 * This class represents the Ports and is used to access the underlying layer
 * generated by JPA.
 *
 * @author <a href="http://www.b-tu.de">BTU</a> DBIS
 *
 */
public class PortsDao
    extends OpenInfraDao<PortsPojo, Ports> {

    /**
     * This is the required constructor which calls the super constructor and in
     * turn creates the corresponding entity manager.
     * @param currentProjectId The identifier of the current project.
     * @param schema           the required schema
     */
    public PortsDao(UUID currentProjectId, OpenInfraSchemas schema) {
        super(null, OpenInfraSchemas.META_DATA, Ports.class);
    }

    @Override
    public PortsPojo mapToPojo(Locale locale, Ports p) {
        if (p != null) {
            PortsPojo pojo = new PortsPojo(p);
            pojo.setPort(p.getPort());
            return pojo;
        } else {
            return null;
        }
    }

    @Override
    public MappingResult<Ports> mapToModel(PortsPojo pojo, Ports ports) {
        if(pojo != null) {
            Ports resultPorts = null;
            try {
                resultPorts = ports;
                if(resultPorts == null) {
                    resultPorts = new Ports();
                    resultPorts.setId(pojo.getUuid());
                }
                resultPorts.setPort(pojo.getPort());
            } catch (NullPointerException npe) {
                throw new OpenInfraEntityException(
                        OpenInfraExceptionTypes.MISSING_DATA_IN_POJO);
            }
            return new MappingResult<Ports>(resultPorts.getId(), resultPorts);
        }
        else {
            return null;
        }
    }

}
