package de.btu.openinfra.backend.db.daos;

import java.util.Locale;
import java.util.UUID;

import de.btu.openinfra.backend.db.MappingResult;
import de.btu.openinfra.backend.db.OpenInfraSchemas;
import de.btu.openinfra.backend.db.jpa.model.ValueListValue;
import de.btu.openinfra.backend.db.jpa.model.ValueListValuesXValueListValue;
import de.btu.openinfra.backend.db.pojos.ValueListValueAssociationPojo;
import de.btu.openinfra.backend.exception.OpenInfraEntityException;
import de.btu.openinfra.backend.exception.OpenInfraExceptionTypes;

/**
 * This class represents the ValueListValueAssociation and is used to access the
 * underlying layer generated by JPA.
 *
 * @author <a href="http://www.b-tu.de">BTU</a> DBIS
 *
 */
public class ValueListValueAssociationDao
	extends OpenInfraValueValueDao<ValueListValueAssociationPojo,
	ValueListValuesXValueListValue, ValueListValue, ValueListValue> {

    /**
     * This is the required constructor which calls the super constructor and in
     * turn creates the corresponding entity manager.
     *
     * @param currentProjectId the current project id (this should be null when
     *                         the system schema is selected)
     * @param schema           the required schema
     */
	public ValueListValueAssociationDao(
			UUID currentProjectId,
			OpenInfraSchemas schema) {
		super(currentProjectId, schema, ValueListValuesXValueListValue.class,
				ValueListValue.class, ValueListValue.class);
	}

	@Override
	public ValueListValueAssociationPojo mapToPojo(
			Locale locale,
			ValueListValuesXValueListValue vlvxvlv) {
	    if(vlvxvlv != null) {
            ValueListValueAssociationPojo pojo =
                    new ValueListValueAssociationPojo(vlvxvlv);
            ValueListValueDao vlvDao =
                new ValueListValueDao(currentProjectId, schema);

            pojo.setAssociationValueListValueId(
                    vlvxvlv.getValueListValue2().getId());
            pojo.setRelationship(
                    vlvDao.mapToPojo(locale, vlvxvlv.getValueListValue1()));
            pojo.setAssociatedValueListValue(
                    vlvDao.mapToPojo(locale, vlvxvlv.getValueListValue3()));

            return pojo;
        }
        else {
            return null;
        }
	}

	@Override
	public MappingResult<ValueListValuesXValueListValue> mapToModel(
			ValueListValueAssociationPojo pojo,
			ValueListValuesXValueListValue vlvxvlv) {

	    try {
            // set value list value 1
	        vlvxvlv.setValueListValue2(em.find(
	                ValueListValue.class,
	                pojo.getAssociationValueListValueId()));

            // set value list value 2
	        vlvxvlv.setValueListValue3(em.find(
	                ValueListValue.class,
	                pojo.getAssociatedValueListValue().getUuid()));

            // set the relationship
	        vlvxvlv.setValueListValue1(em.find(
                    ValueListValue.class,
                    pojo.getRelationship().getUuid()));

        } catch (NullPointerException npe) {
            throw new OpenInfraEntityException(
                    OpenInfraExceptionTypes.MISSING_NAME_IN_POJO);
        }

        // return the model as mapping result
        return new MappingResult<ValueListValuesXValueListValue>(
                vlvxvlv.getId(), vlvxvlv);
	}

}
