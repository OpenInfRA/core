package de.btu.openinfra.backend.db.daos.meta;

import java.util.Locale;

import de.btu.openinfra.backend.db.daos.MappingResult;
import de.btu.openinfra.backend.db.daos.OpenInfraDao;
import de.btu.openinfra.backend.db.daos.OpenInfraSchemas;
import de.btu.openinfra.backend.db.jpa.model.meta.DatabaseConnection;
import de.btu.openinfra.backend.db.pojos.meta.DatabaseConnectionPojo;

/**
 * This class represents the DatabaseConnection and is used to access the 
 * underlying layer generated by JPA.
 * 
 * @author <a href="http://www.b-tu.de">BTU</a> DBIS
 *
 */
public class DatabaseConnectionDao
    extends OpenInfraDao<DatabaseConnectionPojo, DatabaseConnection> {

    /**
     * This is the required constructor which calls the super constructor and in 
     * turn creates the corresponding entity manager.
     * 
     * @param schema           the required schema
     */
    public DatabaseConnectionDao(OpenInfraSchemas schema) {
        super(null, schema, DatabaseConnection.class);
    }

    @Override
    public DatabaseConnectionPojo mapToPojo(Locale locale,
            DatabaseConnection dc) {
        return mapPojoStatically(dc);
    }

    /**
     * This method implements the method mapToPojo in a static way.
     * 
     * @param at     the model object
     * @return       the POJO object when the model object is not null else null
     */
    public static DatabaseConnectionPojo mapPojoStatically(
            DatabaseConnection dc) {
        if (dc != null) {
            DatabaseConnectionPojo pojo = new DatabaseConnectionPojo();
            pojo.setUuid(dc.getId());
            pojo.setServer(ServersDao.mapPojoStatically(dc.getServerBean()));
            pojo.setPort(PortsDao.mapPojoStatically(dc.getPortBean()));
            pojo.setDatabase(DatabasesDao.mapPojoStatically(
                    dc.getDatabaseBean()));
            pojo.setSchema(SchemasDao.mapPojoStatically(dc.getSchemaBean()));
            pojo.setCredentials(CredentialsDao.mapPojoStatically(
                    dc.getCredential()));
            return pojo;
        } else {
            return null;
        }
    }

    @Override
    public MappingResult<DatabaseConnection> mapToModel(
            DatabaseConnectionPojo pojo,
            DatabaseConnection dbc) {
        // TODO Auto-generated method stub
        return null;
    }

}
