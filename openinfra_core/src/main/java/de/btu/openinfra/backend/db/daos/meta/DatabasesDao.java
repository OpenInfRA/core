package de.btu.openinfra.backend.db.daos.meta;

import java.util.Locale;
import java.util.UUID;

import de.btu.openinfra.backend.db.MappingResult;
import de.btu.openinfra.backend.db.OpenInfraSchemas;
import de.btu.openinfra.backend.db.daos.OpenInfraDao;
import de.btu.openinfra.backend.db.jpa.model.meta.Databases;
import de.btu.openinfra.backend.db.pojos.meta.DatabasesPojo;
import de.btu.openinfra.backend.exception.OpenInfraEntityException;
import de.btu.openinfra.backend.exception.OpenInfraExceptionTypes;

/**
 * This class represents the Databases and is used to access the underlying
 * layer generated by JPA.
 *
 * @author <a href="http://www.b-tu.de">BTU</a> DBIS
 *
 */
public class DatabasesDao
    extends OpenInfraDao<DatabasesPojo, Databases> {

    /**
     * This is the required constructor which calls the super constructor and in
     * turn creates the corresponding entity manager.
     * @param currentProjectId The identifier of the current project.
     * @param schema           the required schema
     */
    public DatabasesDao(UUID currentProjectId, OpenInfraSchemas schema) {
        super(null, OpenInfraSchemas.META_DATA, Databases.class);
    }

    @Override
    public DatabasesPojo mapToPojo(Locale locale, Databases d) {
        if (d != null) {
            DatabasesPojo pojo = new DatabasesPojo(d);
            pojo.setDatabase(d.getDatabase());
            return pojo;
        } else {
            return null;
        }
    }

    @Override
    public MappingResult<Databases> mapToModel(
    		DatabasesPojo pojo,
    		Databases dbs) {
        if(pojo != null) {
            Databases resultDatabases = null;
            try {
                resultDatabases = dbs;
                if(resultDatabases == null) {
                    resultDatabases = new Databases();
                    resultDatabases.setId(pojo.getUuid());
                }
                resultDatabases.setDatabase(pojo.getDatabase());
            } catch (NullPointerException npe) {
                throw new OpenInfraEntityException(
                        OpenInfraExceptionTypes.MISSING_DATA_IN_POJO);
            }
            return new MappingResult<Databases>(
                    resultDatabases.getId(),
                    resultDatabases);
        }
        else {
            return null;
        }
    }

}
