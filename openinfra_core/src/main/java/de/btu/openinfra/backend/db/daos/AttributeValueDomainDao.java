package de.btu.openinfra.backend.db.daos;

import java.util.Locale;
import java.util.UUID;

import de.btu.openinfra.backend.db.jpa.model.AttributeValueDomain;
import de.btu.openinfra.backend.db.pojos.AttributeValueDomainPojo;

/**
 * This class represents the AttributeValueDomain and is used to access the 
 * underlying layer generated by JPA.
 * 
 * @author <a href="http://www.b-tu.de">BTU</a> DBIS
 *
 */
public class AttributeValueDomainDao extends 
	OpenInfraDao<AttributeValueDomainPojo, AttributeValueDomain> {

	/**
	 * This is the required constructor which calls the super constructor and in 
	 * turn creates the corresponding entity manager.
	 * 
	 * @param currentProjectId the current project id (this should be null when 
	 *                         the system schema is selected)
	 * @param schema           the required schema
	 */
	public AttributeValueDomainDao(
			UUID currentProjectId,
			OpenInfraSchemas schema) {
		super(currentProjectId, schema, AttributeValueDomain.class);
	}

	@Override
	public AttributeValueDomainPojo mapToPojo(
			Locale locale,
			AttributeValueDomain modelObject) {
		return mapToPojoStatically(locale, modelObject);
	}
	
	/**
	 * This method implements the method mapToPojo in a static way.
	 * 
	 * @param locale the requested language as Java.util locale
	 * @param avd    the model object
	 * @return       the POJO object when the model object is not null else null
	 */
	public static AttributeValueDomainPojo mapToPojoStatically(
			Locale locale,
			AttributeValueDomain avd) {
		
		AttributeValueDomainPojo avdPojo = 
				new AttributeValueDomainPojo();
		avdPojo.setDomain(ValueListValueDao.mapToPojoStatically(
				locale,
				avd.getValueListValue()));
		avdPojo.setTopicInstanceId(avd.getTopicInstance().getId());
		
		return avdPojo;
	}

	@Override
	public MappingResult<AttributeValueDomain> mapToModel(
			AttributeValueDomainPojo pojo,
			AttributeValueDomain avd) {
		// TODO Auto-generated method stub
		return null;
	}

}
