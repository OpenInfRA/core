package de.btu.openinfra.backend.db.daos.meta;

import java.util.Locale;
import java.util.UUID;

import de.btu.openinfra.backend.db.MappingResult;
import de.btu.openinfra.backend.db.OpenInfraSchemas;
import de.btu.openinfra.backend.db.daos.OpenInfraDao;
import de.btu.openinfra.backend.db.jpa.model.meta.Logger;
import de.btu.openinfra.backend.db.pojos.meta.LoggerPojo;
import de.btu.openinfra.backend.exception.OpenInfraEntityException;
import de.btu.openinfra.backend.exception.OpenInfraExceptionTypes;

/**
 * This class represents the Logger and is used to access the underlying layer
 * generated by JPA.
 *
 * @author <a href="http://www.b-tu.de">BTU</a> DBIS
 *
 */
public class LoggerDao
    extends OpenInfraDao<LoggerPojo, Logger>{

    /**
     * This is the required constructor which calls the super constructor and in
     * turn creates the corresponding entity manager.
     * @param currentProjectId The identifier of the current project.
     * @param schema           the required schema
     */
    public LoggerDao(UUID currentProjectId, OpenInfraSchemas schema) {
        super(null, OpenInfraSchemas.META_DATA, Logger.class);
    }

    @Override
    public LoggerPojo mapToPojo(Locale locale, Logger l) {
        if (l != null) {
            LoggerPojo pojo = new LoggerPojo(l);
            pojo.setLogger(l.getLogger());
            return pojo;
        } else {
            return null;
        }
    }

    @Override
    public MappingResult<Logger> mapToModel(LoggerPojo pojo, Logger logger) {
        if(pojo != null) {
            Logger resultLogger = null;
            try {
                resultLogger = logger;
                if(resultLogger == null) {
                    resultLogger = new Logger();
                    resultLogger.setId(pojo.getUuid());
                }
                resultLogger.setLogger(pojo.getLogger());
            } catch (NullPointerException npe) {
                throw new OpenInfraEntityException(
                        OpenInfraExceptionTypes.MISSING_DATA_IN_POJO);
            }
            return new MappingResult<Logger>(
                    resultLogger.getId(),
                    resultLogger);
        }
        else {
            return null;
        }
    }

}
