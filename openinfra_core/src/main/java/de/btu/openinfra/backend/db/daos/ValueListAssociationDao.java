package de.btu.openinfra.backend.db.daos;

import java.util.Locale;
import java.util.UUID;

import de.btu.openinfra.backend.db.MappingResult;
import de.btu.openinfra.backend.db.OpenInfraSchemas;
import de.btu.openinfra.backend.db.jpa.model.ValueList;
import de.btu.openinfra.backend.db.jpa.model.ValueListXValueList;
import de.btu.openinfra.backend.db.pojos.ValueListAssociationPojo;

/**
 * This class represents the ValueListAssociation and is used to access the
 * underlying layer generated by JPA.
 *
 * @author <a href="http://www.b-tu.de">BTU</a> DBIS
 *
 */
public class ValueListAssociationDao
	extends OpenInfraValueValueDao<ValueListAssociationPojo,
	ValueListXValueList, ValueList, ValueList> {

    /**
     * This is the required constructor which calls the super constructor and in
     * turn creates the corresponding entity manager.
     *
     * @param currentProjectId the current project id (this should be null when
     *                         the system schema is selected)
     * @param schema           the required schema
     */
	public ValueListAssociationDao(
			UUID currentProjectId,
			OpenInfraSchemas schema) {
		super(currentProjectId, schema, ValueListXValueList.class,
				ValueList.class, ValueList.class);
	}

	@Override
	public ValueListAssociationPojo mapToPojo(
			Locale locale,
			ValueListXValueList association) {
		return mapToPojoStatically(locale, association);
	}

	@Override
	public MappingResult<ValueListXValueList> mapToModel(
			ValueListAssociationPojo pojo,
			ValueListXValueList vlxvl) {
        // TODO set the model values

        // return the model as mapping result
        return new MappingResult<ValueListXValueList>(vlxvl.getId(), vlxvl);
	}

	/**
     * This method implements the method mapToPojo in a static way.
     *
     * @param locale       the requested language as Java.util locale
     * @param association  the model object
     * @return             the POJO object when the model object is not null
     *                     else null
     */
	public static ValueListAssociationPojo mapToPojoStatically(
			Locale locale,
			ValueListXValueList association) {

		if(association != null) {
			ValueListAssociationPojo pojo =
					new ValueListAssociationPojo();

			pojo.setUuid(association.getId());
			pojo.setTrid(association.getXmin());
			pojo.setRelationship(ValueListValueDao.mapToPojoStatically(locale,
					association.getValueListValue()));
			pojo.setAssociatedValueList(ValueListDao.mapToPojoStatically(locale,
					association.getValueList2Bean()));

			return pojo;
		}
		else {
			return null;
		}
	}
}
