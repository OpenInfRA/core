package de.btu.openinfra.backend.db.daos;

import java.util.Locale;
import java.util.UUID;

import de.btu.openinfra.backend.db.jpa.model.AttributeTypeToAttributeTypeGroup;
import de.btu.openinfra.backend.db.jpa.model.AttributeValueValue;
import de.btu.openinfra.backend.db.jpa.model.TopicInstance;
import de.btu.openinfra.backend.db.pojos.AttributeValueValuePojo;

/**
 * This class represents the AttributeType and is used to access the underlying
 * layer generated by JPA.
 *
 * @author <a href="http://www.b-tu.de">BTU</a> DBIS
 *
 */
public class AttributeValueValueDao
	extends OpenInfraDao<AttributeValueValuePojo, AttributeValueValue> {

	/**
	 * This is the required constructor which calls the super constructor and in
	 * turn creates the corresponding entity manager.
	 *
	 * @param currentProjectId the current project id (this should be null when
	 *                         the system schema is selected)
	 * @param schema           the required schema
	 */
	public AttributeValueValueDao(UUID currentProjectId,
			OpenInfraSchemas schema) {
		super(currentProjectId, schema, AttributeValueValue.class);
	}

	@Override
	public AttributeValueValuePojo mapToPojo(
			Locale locale,
			AttributeValueValue modelObject) {
		return mapToPojoStatically(locale, modelObject);
	}

	/**
	 * This method implements the method mapToPojo in a static way.
	 *
	 * @param locale the requested language as Java.util locale
	 * @param avv    the model object
	 * @return       the POJO object when the model object is not null else null
	 */
	public static AttributeValueValuePojo mapToPojoStatically(
			Locale locale,
			AttributeValueValue avv) {
		AttributeValueValuePojo avvPojo = new AttributeValueValuePojo();

		// set the topic instance id
		avvPojo.setTopicInstanceId(avv.getTopicInstance().getId());
		// set the value of the object
		avvPojo.setValue(PtFreeTextDao.mapToPojoStatically(
				locale,
				avv.getPtFreeText()));
		// set the attribute type group the value belongs to
		avvPojo.setAttributeTypeToAttributeTypeGroupId(
		        avv.getAttributeTypeToAttributeTypeGroup().getId());
		// set the id of the object
		avvPojo.setUuid(avv.getId());

		return avvPojo;
	}

	@Override
	public MappingResult<AttributeValueValue> mapToModel(
			AttributeValueValuePojo pojo,
			AttributeValueValue avv) {

	    // return null if the pojo is null
	    if (pojo != null) {
	        // set the textual information
	        PtFreeTextDao fTD = new PtFreeTextDao(currentProjectId, schema);
	        avv.setPtFreeText(
	                fTD.mapToModel(
	                        pojo.getValue(),
	                        fTD.createModelObject(
	                                pojo.getValue().getUuid())).getModelObject());

	        // set the attribute type to attribute type group
	        avv.setAttributeTypeToAttributeTypeGroup(em.find(
                    AttributeTypeToAttributeTypeGroup.class,
                    pojo.getAttributeTypeToAttributeTypeGroupId()));

	        // set the topic instance
	        avv.setTopicInstance(
	                em.find(TopicInstance.class, pojo.getTopicInstanceId()));

	        return new MappingResult<AttributeValueValue>(avv.getId(), avv);
	    } else {
	        return null;
        }
	}

}
