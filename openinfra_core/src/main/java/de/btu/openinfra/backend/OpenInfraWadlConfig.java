package de.btu.openinfra.backend;

import java.util.List;

import org.glassfish.jersey.server.wadl.config.WadlGeneratorConfig;
import org.glassfish.jersey.server.wadl.config.WadlGeneratorDescription;
import org.glassfish.jersey.server.wadl.internal.generators.WadlGeneratorApplicationDoc;
import org.glassfish.jersey.server.wadl.internal.generators.WadlGeneratorGrammarsSupport;
import org.glassfish.jersey.server.wadl.internal.generators.resourcedoc.WadlGeneratorResourceDocSupport;

/**
 * This class is used to extend the build-in generation of the WADL by Java-DOC
 * enriched information.
 *
 * This class is intrinsingly part of the REST API. But it is also configured
 * by the {@see OpenInfraApplication} class. We decided to place it in this
 * package next to where it is registered.
 *
 * See:
 * https://irfannagoo.wordpress.com/2012/12/20/jersey-extended-wadl-support/
 * http://razvancaraghin.blogspot.de/2014/01/html-documentation-for-your-rest.html
 * http://biemond.blogspot.de/2013/08/custom-jersey-wadl-generation.html
 *
 * The WADL doclet is automatically generated by the Maven install process.
 *
 * Maybe another solution:
 * http://www.miredot.com/exampledocs/
 *
 * @author <a href="http://www.b-tu.de">BTU</a> DBIS
 *
 */
public class OpenInfraWadlConfig extends WadlGeneratorConfig {

	private static final String path = "de/btu/openinfra/backend/wadl/";

    @Override
    public List<WadlGeneratorDescription> configure() {

        WadlGeneratorConfigDescriptionBuilder builder =
        		// This is used to provide a description of the application.
        		generator(WadlGeneratorApplicationDoc.class)
        		.prop("applicationDocsStream", path + "application-doc.xml")
        		// This is used to provide a different XSD schema file
        		// (currently not used)
        		.generator(WadlGeneratorGrammarsSupport.class)
        		.prop("grammarsStream", path + "application-grammars.xml")
        		// This provides the JavaDoc documentation generated by the
        		// Maven install process.
        		.generator(WadlGeneratorResourceDocSupport.class)
        		.prop("resourceDocStream", path + "resourcedoc.xml");
        return builder.descriptions();
    }

}
