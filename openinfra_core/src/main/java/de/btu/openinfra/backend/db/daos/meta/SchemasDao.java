package de.btu.openinfra.backend.db.daos.meta;

import java.util.Locale;

import de.btu.openinfra.backend.db.daos.MappingResult;
import de.btu.openinfra.backend.db.daos.OpenInfraDao;
import de.btu.openinfra.backend.db.daos.OpenInfraSchemas;
import de.btu.openinfra.backend.db.jpa.model.meta.Schemas;
import de.btu.openinfra.backend.db.pojos.meta.SchemasPojo;

/**
 * This class represents the Schemas and is used to access the underlying layer 
 * generated by JPA.
 * 
 * @author <a href="http://www.b-tu.de">BTU</a> DBIS
 *
 */
public class SchemasDao
    extends OpenInfraDao<SchemasPojo, Schemas> {

    /**
     * This is the required constructor which calls the super constructor and in 
     * turn creates the corresponding entity manager.
     * 
     * @param schema           the required schema
     */
    public SchemasDao(OpenInfraSchemas schema) {
        super(null, schema, Schemas.class);
    }

    @Override
    public SchemasPojo mapToPojo(Locale locale, Schemas s) {
        return mapPojoStatically(s);
    }

    /**
     * This method implements the method mapToPojo in a static way.
     * 
     * @param at     the model object
     * @return       the POJO object when the model object is not null else null
     */
    public static SchemasPojo mapPojoStatically(Schemas s) {
        if (s != null) {
            SchemasPojo pojo = new SchemasPojo();
            pojo.setUuid(s.getId());
            pojo.setSchema(s.getSchema());
            return pojo;
        } else {
            return null;
        }
    }

    @Override
    public MappingResult<Schemas> mapToModel(SchemasPojo pojo, Schemas s) {
        // TODO Auto-generated method stub
        return null;
    }

}
