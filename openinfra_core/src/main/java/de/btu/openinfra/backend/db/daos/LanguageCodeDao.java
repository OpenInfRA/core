 package de.btu.openinfra.backend.db.daos;

import java.util.Locale;
import java.util.UUID;

import de.btu.openinfra.backend.db.jpa.model.LanguageCode;
import de.btu.openinfra.backend.db.pojos.LanguageCodePojo;

/**
 * This class represents the LanguageCode and is used to access the underlying
 * layer generated by JPA.
 *
 * @author <a href="http://www.b-tu.de">BTU</a> DBIS
 *
 */
public class LanguageCodeDao
	extends OpenInfraDao<LanguageCodePojo, LanguageCode> {

	/**
	 * This is the required constructor which calls the super constructor and in
	 * turn creates the corresponding entity manager.
	 *
	 * @param currentProjectId the current project id (this should be null when
	 *                         the system schema is selected)
	 * @param schema           the required schema
	 */
	public LanguageCodeDao(UUID currentProjectId, OpenInfraSchemas schema) {
		super(currentProjectId, schema, LanguageCode.class);
	}

	@Override
	public LanguageCodePojo mapToPojo(Locale locale, LanguageCode lc) {
		return mapToPojoStatically(lc);
	}

	/**
	 * This method implements the method mapToPojo in a static way.
	 *
	 * @param lc     the model object
	 * @return       the POJO object when the model object is not null else null
	 */
	public static LanguageCodePojo mapToPojoStatically(LanguageCode lc) {
		LanguageCodePojo pojo = new LanguageCodePojo();
		pojo.setUuid(lc.getId());
		pojo.setLanguageCode(lc.getLanguageCode());
		return pojo;
	}

	/**
	 * This method returns the a language code object using the language code as
	 * string.
	 *
	 * @param lang the language code
	 * @return     a language code object
	 */
	public LanguageCode read(String lang) {
		return em.createNamedQuery(
				"LanguageCode.findByString",
				LanguageCode.class)
				.setParameter("value", lang)
				.getSingleResult();
	}

	@Override
	public MappingResult<LanguageCode> mapToModel(
			LanguageCodePojo pojo,
			LanguageCode lc) {

        // return null if the pojo is null
        if (pojo != null) {

            // TODO set the model values

            // return the model as mapping result
            return new MappingResult<LanguageCode>(lc.getId(), lc);
        } else {
            return null;
        }
	}

}
