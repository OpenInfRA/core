package de.btu.openinfra.backend.db.daos.meta;

import java.util.Locale;
import java.util.UUID;

import de.btu.openinfra.backend.db.MappingResult;
import de.btu.openinfra.backend.db.OpenInfraSchemas;
import de.btu.openinfra.backend.db.daos.OpenInfraDao;
import de.btu.openinfra.backend.db.jpa.model.meta.Projects;
import de.btu.openinfra.backend.db.pojos.meta.ProjectsPojo;
import de.btu.openinfra.backend.exception.OpenInfraEntityException;
import de.btu.openinfra.backend.exception.OpenInfraExceptionTypes;

/**
 * This class represents the Projects and is used to access the underlying
 * layer generated by JPA.
 *
 * @author <a href="http://www.b-tu.de">BTU</a> DBIS
 *
 */
public class ProjectsDao
    extends OpenInfraDao<ProjectsPojo, Projects>{

    /**
     * This is the required constructor which calls the super constructor and in
     * turn creates the corresponding entity manager.
     * @param currentProjectId The identifier of the current project.
     * @param schema           the required schema
     */
    public ProjectsDao(UUID currentProjectId, OpenInfraSchemas schema) {
        super(null, OpenInfraSchemas.META_DATA, Projects.class);
    }

    @Override
    public ProjectsPojo mapToPojo(Locale locale, Projects p) {
        if (p != null) {
            ProjectsPojo pojo = new ProjectsPojo(p);
            pojo.setProjectId(p.getProjectId());
            pojo.setDatabaseConnection(
                    new DatabaseConnectionDao(
                            currentProjectId,
                            schema).mapToPojo(
                                    locale,
                                    p.getDatabaseConnection()));
            pojo.setIsSubproject(p.getIsSubproject());
            return pojo;
        } else {
            return null;
        }
    }

    @Override
    public MappingResult<Projects> mapToModel(ProjectsPojo pojo, Projects ps) {
        if(pojo != null) {
            Projects resultProjects = null;
            try {
                resultProjects = ps;
                if(resultProjects == null) {
                    resultProjects = new Projects();
                    resultProjects.setId(pojo.getUuid());
                }
                resultProjects.setProjectId(pojo.getProjectId());
                resultProjects.setIsSubproject(pojo.getIsSubproject());
                resultProjects.setDatabaseConnection(
                        new DatabaseConnectionDao(
                                currentProjectId,
                                schema).mapToModel(
                                        pojo.getDatabaseConnection(),
                                        null).getModelObject());
            } catch (NullPointerException npe) {
                throw new OpenInfraEntityException(
                        OpenInfraExceptionTypes.MISSING_DATA_IN_POJO);
            }
            return new MappingResult<Projects>(
                    resultProjects.getId(),
                    resultProjects);
        }
        else {
            return null;
        }
    }

}
