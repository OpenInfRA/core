package de.btu.openinfra.backend.db.daos;

import java.util.Locale;
import java.util.UUID;

import de.btu.openinfra.backend.db.MappingResult;
import de.btu.openinfra.backend.db.OpenInfraSchemas;
import de.btu.openinfra.backend.db.jpa.model.AttributeTypeGroup;
import de.btu.openinfra.backend.db.jpa.model.AttributeTypeGroupToTopicCharacteristic;
import de.btu.openinfra.backend.db.jpa.model.Multiplicity;
import de.btu.openinfra.backend.db.jpa.model.TopicCharacteristic;
import de.btu.openinfra.backend.db.pojos.TopicCharacteristicToAttributeTypeGroupPojo;
import de.btu.openinfra.backend.exception.OpenInfraEntityException;
import de.btu.openinfra.backend.exception.OpenInfraExceptionTypes;

/**
 * This class represents the TopicCharacteristicToAttributeTypeGroup and is used
 * to access the underlying layer generated by JPA.
 *
 * @author <a href="http://www.b-tu.de">BTU</a> DBIS
 *
 */
public class TopicCharacteristicToAttributeTypeGroupDao extends
	OpenInfraValueValueDao<TopicCharacteristicToAttributeTypeGroupPojo,
	AttributeTypeGroupToTopicCharacteristic, AttributeTypeGroup,
	TopicCharacteristic> {

	/**
     * This is the required constructor which calls the super constructor,
     * creates the corresponding entity manager and initiate
     * topicCharacteristicDao.
     *
     * @param currentProjectId the current project id (this should be null when
     *                         the system schema is selected)
     * @param schema           the required schema
     */
	public TopicCharacteristicToAttributeTypeGroupDao(
			UUID currentProjectId,
			OpenInfraSchemas schema) {
		super(currentProjectId, schema,
				AttributeTypeGroupToTopicCharacteristic.class,
				AttributeTypeGroup.class, TopicCharacteristic.class);
	}

	@Override
	public TopicCharacteristicToAttributeTypeGroupPojo mapToPojo(
			Locale locale,
			AttributeTypeGroupToTopicCharacteristic atgttc) {
        if (atgttc != null) {
            TopicCharacteristicToAttributeTypeGroupPojo pojo =
                    new TopicCharacteristicToAttributeTypeGroupPojo(atgttc);

            pojo.setTopicCharacteristic(
                    new TopicCharacteristicDao(
                            currentProjectId,
                            schema).mapToPojo(
                    				locale,
                    				atgttc.getTopicCharacteristic()));
            pojo.setAttributeTypeGroupId(
                    atgttc.getAttributeTypeGroup().getId());
            pojo.setMultiplicity(new MultiplicityDao(
                    currentProjectId,
                    schema).mapToPojo(
                            locale,
                            atgttc.getMultiplicityBean()));

            if(atgttc.getOrder() != null) {
                pojo.setOrder(atgttc.getOrder());
            }

            return pojo;
        } else {
            return null;
        }
    }
	@Override
	public MappingResult<AttributeTypeGroupToTopicCharacteristic> mapToModel(
			TopicCharacteristicToAttributeTypeGroupPojo pojo,
			AttributeTypeGroupToTopicCharacteristic att) {

	    try {
            // set the attribute type group
	        att.setAttributeTypeGroup(em.find(
	                AttributeTypeGroup.class,
	                pojo.getAttributeTypeGroupId()));

	        // set the topic characteristic
	        att.setTopicCharacteristic(em.find(
	                TopicCharacteristic.class,
	                pojo.getTopicCharacteristic().getUuid()));

	        // set the multiplicity
	        att.setMultiplicityBean(em.find(
	                Multiplicity.class,
	                pojo.getMultiplicity().getUuid()));
        } catch (NullPointerException npe) {
            throw new OpenInfraEntityException(
                    OpenInfraExceptionTypes.MISSING_DATA_IN_POJO);
        }

        // set the order (optional)
        att.setOrder(pojo.getOrder());

        // return the model as mapping result
        return new MappingResult<AttributeTypeGroupToTopicCharacteristic>(
                att.getId(), att);
	}

}
